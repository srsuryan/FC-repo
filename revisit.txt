1. http://www.geeksforgeeks.org/largest-rectangle-under-histogram/<<<<<<<<<<<<<<********************TP***************>
2. island.c
3. maxsqmat.c - find the largest square
4. http://www.geeksforgeeks.org/given-matrix-o-x-replace-o-x-surrounded-x/ - 
   If can't be done in pass, do it in 2 pass
5. http://www.geeksforgeeks.org/given-matrix-o-x-find-largest-subsquare-surrounded-x/
    This is comb of 4 and 3 above
6. Mob key padd based -> DP[], mobphpad.c
7. maxsumrect.c - find the sub matrix with largest sum. Uses dp twice, one for sum calc and another for largest sub array
8. Real neat stuff - http://www.geeksforgeeks.org/a-boolean-matrix-question/
9. Real neat stuff - http://www.geeksforgeeks.org/search-in-row-wise-and-column-wise-sorted-matrix/
10. NP-complete/Polynomial time - what is it?
MOST IMP 11. LCS - http://www.geeksforgeeks.org/dynamic-programming-set-4-longest-common-subsequence/
            =======================================================================================
11. Example of solving graph problem using topological sorting and solving - shortpathtopo.c - diagram refer sample_graph.pdf
12. LLAP llap.c<TBD> <<<<<*****************************TP***********************************>>>>>>>>>>>>
    ===============================================================================
http://www.geeksforgeeks.org/length-of-the-longest-arithmatic-progression-in-a-sorted-array/
dont have to go for dp. The alg to find series based on a[i]+a[k] == 2*a[j]; is very inovative

13. Interleaved -> Use this to understand DP. My method is much more efficient.
14. Google Qn: wordbrk.cpp
http://www.geeksforgeeks.org/dynamic-programming-set-32-word-break-problem/


15.LIS(box-stacking)
====================

Graph:
1. DFS sorting
2. Topological sorting
3. shortest path using topological sorting
4. note, jobsched algo was done by converting the requirement into a graph, apply mat[][]
5. converting digit into a[3]-> (1, 1, 1), (2, 1), (3, 0) should be avoided as many problems such as that of ropecut
etc can be done without having to break it that way. check out, ropecut2 is a fine e.g for that
http://www.geeksforgeeks.org/dynamic-programming-set-13-cutting-a-rod/


BIGG
http://www.geeksforgeeks.org/find-minimum-possible-size-of-array-with-given-rules-for-removal/

Most important
==============
a. LIS : used in box-stacking - Longest Increasing subsequence
       :: http://www.geeksforgeeks.org/dynamic-programming-set-3-longest-increasing-subsequence/
       http://www.geeksforgeeks.org/dynamic-programming-set-14-variations-of-lis/
       longincseq.c - application
         a.Box-stacking : First qsort (use clib) to get box sorted by wxd. Apply LIS to stack.
         b.Building-bridges : https://people.cs.clemson.edu/~bcdean/dp_practice/dp_6.swf
         c.Maximum Sum Increasing Subsequence:
         d.Suppose you have two sets (a, b) and (c, d), the second set can follow the first set if b < c.
           http://www.geeksforgeeks.org/dynamic-programming-set-20-maximum-length-chain-of-pairs/
         e.bitonic
           http://www.geeksforgeeks.org/dynamic-programming-set-15-longest-bitonic-subsequence/
b. LCS
c. LLAP
d. knapsack -> revisit
